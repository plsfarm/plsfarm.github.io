{"version":3,"file":"static/js/180.a14d9a62.chunk.js","mappings":"kJAIA,MAmJA,EAnJsC,CAIpC,CACEA,IAAK,EACLC,SAAU,eACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUC,KACjBC,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,4BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUK,IACjBH,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUM,KACjBJ,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,4BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUO,KACjBL,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUQ,KACjBN,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUS,KACjBP,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,2BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUO,KACjBL,WAAYF,EAAAA,GAAUU,IACtBN,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,cACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUU,IACjBR,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,cACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUW,IACjBT,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,EACLC,SAAU,cACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUW,IACjBT,WAAYF,EAAAA,GAAUC,KACtBG,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUY,KACjBV,WAAYF,EAAAA,GAAUa,MACtBT,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,eACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUY,KACjBV,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUa,MACjBX,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUc,MACjBZ,WAAYF,EAAAA,GAAUe,KACtBX,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,eACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUe,KACjBb,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,6BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUgB,MACjBd,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,MAEZ,CACER,IAAK,GACLC,SAAU,4BACVC,UAAW,6CACXC,MAAOC,EAAAA,GAAUiB,KACjBf,WAAYF,EAAAA,GAAUG,KACtBC,SAAU,OAEZc,KAAKC,IAAC,IACHA,EACHpB,MAAOoB,EAAEpB,MAAMqB,UACflB,WAAYiB,EAAEjB,WAAWkB,UACzBtB,WAAWuB,EAAAA,EAAAA,GAAWF,EAAErB,c","sources":["../../packages/farms/constants/369.ts"],"sourcesContent":["import { plsTokens } from '@pulsex/tokens'\nimport { getAddress } from 'viem'\nimport { SerializedFarmConfig } from '..'\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * Farms (PID 0, 1) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'PLSX-WPLS LP',\n    lpAddress: '0x1b45b9148791d3a104184Cd5DFE5CE57193a3ee9',\n    token: plsTokens.plsx,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 1,\n    lpSymbol: 'DAI from Ethereum-WPLS LP',\n    lpAddress: '0xE56043671df55dE5CDf8459710433C10324DE0aE',\n    token: plsTokens.dai,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 2,\n    lpSymbol: 'USDC from Ethereum-WPLS LP',\n    lpAddress: '0x6753560538eca67617a9ce605178f788be7e524e',\n    token: plsTokens.usdc,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 3,\n    lpSymbol: 'HEX from Ethereum-WPLS LP',\n    lpAddress: '0xaa1ea17e7499f892ab9e45e139d843049942fb7a',\n    token: plsTokens.ehex,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 4,\n    lpSymbol: 'WETH from Ethereum-WPLS LP',\n    lpAddress: '0x42AbdFDB63f3282033C766E72Cc4810738571609',\n    token: plsTokens.weth,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 5,\n    lpSymbol: 'USDT from Ethereum-WPLS LP',\n    lpAddress: '0x322Df7921F28F1146Cdf62aFdaC0D6bC0Ab80711',\n    token: plsTokens.usdt,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 6,\n    lpSymbol: 'HEX from Ethereum-HEX LP',\n    lpAddress: '0x1dA059091d5fe9F2d3781e0FdA238BB109FC6218',\n    token: plsTokens.ehex,\n    quoteToken: plsTokens.hex,\n    protocol: 'V1',\n  },\n  {\n    pid: 7,\n    lpSymbol: 'HEX-WPLS LP',\n    lpAddress: '0xf1F4ee610b2bAbB05C635F726eF8B0C568c8dc65',\n    token: plsTokens.hex,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 8,\n    lpSymbol: 'INC-WPLS LP',\n    lpAddress: '0xf808Bb6265e9Ca27002c0A04562Bf50d4FE37EAA',\n    token: plsTokens.inc,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 9,\n    lpSymbol: 'INC-PLSX LP',\n    lpAddress: '0x7Dbeca4c74d01cd8782D4EF5C05C0769723fb0ea',\n    token: plsTokens.inc,\n    quoteToken: plsTokens.plsx,\n    protocol: 'V1',\n  },\n  {\n    pid: 10,\n    lpSymbol: 'WBTC from Ethereum-WBTC LP',\n    lpAddress: '0x80a600F7Bd4eb31183A23175dC61c269E6d20588',\n    token: plsTokens.wbtc,\n    quoteToken: plsTokens.ewbtc,\n    protocol: 'V1',\n  },\n  {\n    pid: 11,\n    lpSymbol: 'WBTC-WPLS LP',\n    lpAddress: '0x46E27Ea3A035FfC9e6d6D56702CE3D208FF1e58c',\n    token: plsTokens.wbtc,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 12,\n    lpSymbol: 'WBTC from Ethereum-WPLS LP',\n    lpAddress: '0xDB82b0919584124A0Eb176ab136A0Cc9F148B2D1',\n    token: plsTokens.ewbtc,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 14,\n    lpSymbol: 'PEPE from Ethereum-PEPE LP',\n    lpAddress: '0xB01855CAf7e4550088a4d735d902ABdF6655b1d6',\n    token: plsTokens.epepe,\n    quoteToken: plsTokens.pepe,\n    protocol: 'V1',\n  },\n  {\n    pid: 15,\n    lpSymbol: 'PEPE-WPLS LP',\n    lpAddress: '0xDDAa0F4Bf2eAeE8e13B2045d03075C1822856DC6',\n    token: plsTokens.pepe,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 16,\n    lpSymbol: 'LINK from Ethereum-WPLS LP',\n    lpAddress: '0xF0911ae86D32b3f19C52c7239fAF8d356c62D593',\n    token: plsTokens.elink,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n  {\n    pid: 18,\n    lpSymbol: 'UNI from Ethereum-WPLS LP',\n    lpAddress: '0x2736F275C4814b6Fa9023e09772BbF6E68C63AcD',\n    token: plsTokens.euni,\n    quoteToken: plsTokens.wpls,\n    protocol: 'V1',\n  },\n].map((p) => ({\n  ...p,\n  token: p.token.serialize,\n  quoteToken: p.quoteToken.serialize,\n  lpAddress: getAddress(p.lpAddress),\n}))\n\nexport default farms\n"],"names":["pid","lpSymbol","lpAddress","token","plsTokens","plsx","quoteToken","wpls","protocol","dai","usdc","ehex","weth","usdt","hex","inc","wbtc","ewbtc","epepe","pepe","elink","euni","map","p","serialize","getAddress"],"sourceRoot":""}